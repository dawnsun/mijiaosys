<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mijiaokj.sys.dal.repository.mapper.origin.LandResMapper">
    <!--  create table LAND_RES
    (
       id                   bigint(20) unsigned not null auto_increment,
       user_id     bigint(20) unsigned not null  comment '管理者id',
       longitude            varchar(16)  comment '经度',
       latitude             varchar(16)  comment '纬度',
       altitude             varchar(16)  comment '海拔',
       alias                varchar(32)  comment '土地别名',
       address              varchar(128)  comment '土地详细地址',
       size                 varchar(16)  comment '面积大小',
       land_img                 varchar(16)  comment '当前土地照片附件id多张用逗号隔开',
       gmt_create           datetime not null comment '创建时间',
       gmt_modified         datetime not null comment '修改时间',
       creator              varchar(32) not null comment '创建人',
       modifier             varchar(32) not null comment '修改人',
       is_delete            tinyint(1) not null  DEFAULT '0' comment '0-有效 1-删除',
       primary key (id)
    );

    alter table LAND_RES comment '土地资源表'; -->

    <resultMap id="BaseResultMap" type="com.mijiaokj.sys.domain.origin.DailyOperation">
        <result column="user_id" jdbcType="BIGINT" property="userId" />
        <result column="longitude" jdbcType="VARCHAR" property="longitude" />
        <result column="latitude" jdbcType="VARCHAR" property="latitude" />
        <result column="altitude" jdbcType="VARCHAR" property="altitude" />
        <result column="alias" jdbcType="VARCHAR" property="alias" />
        <result column="address" jdbcType="VARCHAR" property="address" />
        <result column="size" jdbcType="VARCHAR" property="size" />
        <result column="land_img" jdbcType="VARCHAR" property="landImg" />
    </resultMap>

    <sql id="BaseColumns">
        user_id, longitude, latitude, altitude, alias, address, size, land_img
    </sql>

    <sql id="BaseProperties">
        #{userId},
        #{longitude},
        #{latitude},
        #{altitude},
        #{alias},
        #{address},
        #{size},
        #{landImg}
    </sql>

    <select id="getById" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select *
        from land_res
        where id = #{id,jdbcType=BIGINT}
        and is_delete = 0
    </select>

    <select id="queryLandResByUserId" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select *
        from land_res
        where is_delete = 0 and user_id = #{userId,jdbcType=BIGINT}
    </select>

    <insert id="insert" parameterType="com.mijiaokj.sys.domain.origin.LandRes" useGeneratedKeys="true" keyProperty="id">
        insert into land_res (
        <include refid="BaseColumns" /> ,
        <include refid="Common.CommonColumns" />
        ) values (
        <include refid="BaseProperties" /> ,
        <include refid="Common.CommonProperties" />
        )
    </insert>

    <update id="update" parameterType="com.mijiaokj.sys.domain.origin.LandRes">
        update land_res set
        size = #{size,jdbcType=VARCHAR},
        alias = #{overElements,jdbcType=VARCHAR},
        address = #{overElements,jdbcType=VARCHAR},
        land_img = #{address,jdbcType=VARCHAR}
        <include refid="Common.CommonUpdate" />
        where id = #{id,jdbcType=BIGINT}
    </update>

    <update id="delete" parameterType="java.lang.Long">
        update land_res
        set is_delete = 1
        where id = #{id,jdbcType=BIGINT}
    </update>

    <select id="selectPageByMap" resultMap="BaseResultMap">
        select t1.*
        from land_res t1 ,(
        select id from land_res
        WHERE is_delete=0
        order by gmt_modified desc
        limit #{startRow,jdbcType=INTEGER} ,
        #{pageSize,jdbcType=INTEGER}
        )t2
        WHERE t1.id=t2.id
    </select>

    <select id="pageCountByMap" resultType="java.lang.Integer">
        select count(1) as count
        from land_res WHERE is_delete=0
    </select>

</mapper>