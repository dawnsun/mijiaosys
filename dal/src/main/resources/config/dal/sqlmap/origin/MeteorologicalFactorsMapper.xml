<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mijiaokj.sys.dal.repository.mapper.origin.MeteorologicalFactorsMapper">
    <!--  land_id              bigint(20) unsigned not null comment '土地资源主键',
   over_elements        varchar(16)  comment '超标元素',
   missing_elements     varchar(16)  comment '缺失元素',
   ph                varchar(2)  comment '酸碱度',
   testing_id       bigint(20) unsigned not null   comment '检测机构id',
   gmt_testing           datetime not null comment '监测时间',
   testing_file                 varchar(16)  comment '检测附件',
   land_img                 varchar(16)  comment '当前土地照片附件id多张用逗号隔开',
   alter table LAND_QUALITY comment '土地质量监测表'; -->

    <resultMap id="BaseResultMap" type="com.mijiaokj.sys.domain.origin.MeteorologicalFactors">
        <result column="land_id" jdbcType="BIGINT" property="landId" />
        <result column="over_elements" jdbcType="VARCHAR" property="overElements" />
        <result column="missing_elements" jdbcType="VARCHAR" property="missingElements" />
        <result column="ph" jdbcType="VARCHAR" property="ph" />
        <result column="testing_id" jdbcType="BIGINT" property="testingId" />
        <result column="gmt_testing" jdbcType="TIMESTAMP" property="gmtTesting" />
        <result column="testing_file" jdbcType="VARCHAR" property="testingFile" />
        <result column="land_img" jdbcType="VARCHAR" property="landImg" />
    </resultMap>

    <sql id="BaseColumns">
        land_id, over_elements, missing_elements, ph, testing_id, gmt_testing, testing_file, land_img
    </sql>

    <sql id="BaseProperties">
        #{landId},
        #{overElements},
        #{missingElements},
        #{ph},
        #{testingId},
        #{gmtTesting},
        #{testingFile},
        #{landImg}
    </sql>

    <select id="getById" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select *
        from land_quality
        where id = #{id,jdbcType=BIGINT}
        and is_delete = 0
    </select>

    <select id="queryLandQualityByLandId" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select *
        from land_quality
        where is_delete = 0 and land_id = #{landId,jdbcType=BIGINT}
    </select>

    <insert id="insert" parameterType="com.mijiaokj.sys.domain.origin.LandQuality" useGeneratedKeys="true" keyProperty="id">
        insert into land_quality (
        <include refid="BaseColumns" /> ,
        <include refid="Common.CommonColumns" />
        ) values (
        <include refid="BaseProperties" /> ,
        <include refid="Common.CommonProperties" />
        )
    </insert>

    <update id="update" parameterType="com.mijiaokj.sys.domain.origin.LandQuality">
        update land_quality set
        land_id = #{landId,jdbcType=BIGINT},
        over_elements = #{overElements,jdbcType=VARCHAR},
        missing_elements = #{missingElements,jdbcType=VARCHAR},
        ph  = #{ph,jdbcType=VARCHAR},
        testing_id = #{testingId,jdbcType=BIGINT},
        gmt_testing = #{gmtTesting,jdbcType=TIMESTAMP},
        testing_file = #{testingFile,jdbcType=VARCHAR},
        land_img = #{landImg,jdbcType=VARCHAR}
        <include refid="Common.CommonUpdate" />
        where id = #{id,jdbcType=BIGINT}
    </update>

    <update id="delete" parameterType="java.lang.Long">
        update land_quality
        set is_delete = 1
        where id = #{id,jdbcType=BIGINT}
    </update>

    <select id="selectPageByMap" resultMap="BaseResultMap">
        select t1.*
        from land_quality t1 ,(
        select id from land_quality
        WHERE is_delete=0
        order by gmt_modified desc
        limit #{startRow,jdbcType=INTEGER} ,
        #{pageSize,jdbcType=INTEGER}
        )t2
        WHERE t1.id=t2.id
    </select>

    <select id="pageCountByMap" resultType="java.lang.Integer">
        select count(1) as count
        from land_quality WHERE is_delete=0
    </select>

</mapper>